C51 COMPILER V9.56.0.0   LCD12864                                                          12/26/2017 12:46:03 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\LCD12864.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE LCD12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -LCD12864.lst) TABS(2) OBJECT(.\Objects\LCD12864.obj)

line level    source

   1          #include "LCD12864.h"
   2          
   3          /****************************
   4           * @author Unicorn
   5           * @date 2017-12-20
   6           */
   7           
   8          /*******************************************************************************
   9          * @function         : LCD12864_Busy
  10          * @brief          : check the lcd12864 is busy
  11          * @param            : none
  12          * @retval           : 1: freedom £¬0 : busy
  13          * read status: rs=0, rw=1, e=1, output LCD12864 D0~D7=status
  14          * BF=1:busy, BF=0:freedom
  15          *******************************************************************************/
  16          uchar LCD12864_Busy(void)
  17          {
  18   1        uchar i = 0;
  19   1      
  20   1        LCD12864_RS = 0;    //command mode
  21   1        LCD12864_RW = 1;  //read mode
  22   1      
  23   1        LCD12864_EN = 1;
  24   1        delayMs(1);
  25   1      
  26   1        while((LCD12864_DATA_PORT & 0x80) == 0x80)  //check value
  27   1        {
  28   2          i++;
  29   2          if(i > 100)
  30   2          {
  31   3            LCD12864_EN = 0;
  32   3            return 0;    //timeout
  33   3          }
  34   2        }
  35   1      
  36   1        LCD12864_EN = 0;
  37   1      
  38   1        return 1;
  39   1      }
  40          
  41          /*******************************************************************************
  42          * @function        : LCD12864_WriteCmd
  43          * @brief         : LCD12864 write command
  44          * @param           : cmd : lcd12864 instruction
  45          * @retval          : none
  46          * write command:   rs=0, rw=0, e=0, D0~D7=cmd, e=1 create high level to write command
  47          *******************************************************************************/
  48          void LCD12864_WriteCmd(uchar cmd)
  49          {
  50   1        uchar i;
  51   1        i = 0;
  52   1        while( LCD12864_Busy() == 0)
  53   1        {
  54   2          delayMs(1);
C51 COMPILER V9.56.0.0   LCD12864                                                          12/26/2017 12:46:03 PAGE 2   

  55   2          i++;
  56   2          if( i>100)
  57   2          {
  58   3            return;    //timeout
  59   3          } 
  60   2        }
  61   1        
  62   1        LCD12864_RS = 0;     //command mode
  63   1        LCD12864_RW = 0;     //write mode
  64   1        LCD12864_EN = 0;     //init en
  65   1      
  66   1        LCD12864_DATA_PORT = cmd;   //set datas
  67   1      
  68   1        LCD12864_EN = 1;       //write
  69   1        delayMs(5);
  70   1        LCD12864_EN = 0;              
  71   1      }
  72          
  73          /*******************************************************************************
  74          * @function        : LCD12864_WriteData
  75          * @brief       : LCD12864 write datas
  76          * @param           : dat
  77          * @retval          : none
  78          * LCD12864 write datas:   rs=1, rw=0, e=0, D0~D7=dat, e=1 create high level to output datas
  79          *******************************************************************************/
  80          void LCD12864_WriteData(uchar dat)
  81          {
  82   1        uchar i;
  83   1        i = 0;
  84   1        while( LCD12864_Busy() == 0)
  85   1        {
  86   2          delayMs(1);
  87   2          i++;
  88   2          if( i>100)
  89   2          {
  90   3            return;    //timeout
  91   3          } 
  92   2        }
  93   1      
  94   1        LCD12864_RS = 1;     //data mode
  95   1        LCD12864_RW = 0;     //write mode
  96   1        LCD12864_EN = 0;     //init en
  97   1      
  98   1        LCD12864_DATA_PORT = dat;   //set data
  99   1      
 100   1        LCD12864_EN = 1;       //write
 101   1        delayMs(5);
 102   1        LCD12864_EN = 0;    
 103   1      }
 104          
 105          
 106          /*******************************************************************************
 107          * @function        : LCD12864_ReadData
 108          * @brief       : read datas from lcd12864
 109          * @param           : none
 110          * @retval          : the read values
 111          *******************************************************************************/
 112          /*#ifdef LCD12864_PICTURE//drawing mode
 113          
 114          uchar LCD12864_ReadData(void)
 115          {
 116            uchar i, readValue;
C51 COMPILER V9.56.0.0   LCD12864                                                          12/26/2017 12:46:03 PAGE 3   

 117          
 118            i = 0;
 119            while( LCD12864_Busy() == 0)
 120            {
 121              delayMs(1);
 122              i++;
 123              if( i>100)
 124              {
 125                return 0;    //timeout
 126              } 
 127            }
 128          
 129            LCD12864_RS = 1;       //command mode
 130            LCD12864_RW = 1;
 131            LCD12864_EN = 0;
 132            delayMs(1);  //wait
 133          
 134            LCD12864_EN = 1;
 135            delayMs(1);
 136            readValue = LCD12864_DATA_PORT;
 137            LCD12864_EN = 0;
 138          
 139            return readValue;
 140          }
 141          
 142          #endif*/
 143          
 144          /*******************************************************************************
 145          * @function        : LCD12864_Init
 146          * @brief         : LCD12864 init
 147          * @param           : none
 148          * @retval          : none
 149          *******************************************************************************/
 150          void LCD12864_Init()
 151          {
 152   1        LCD12864_WriteCmd(BASIC_OP_CMD);  //general command
 153   1        LCD12864_WriteCmd(ON_SHOW_CLOSE_PTR_CMD);  //show on, but close the cursor show
 154   1        LCD12864_WriteCmd(SCREEN_CLR_CMD);  //clear the screen
 155   1      }
 156          
 157          /*******************************************************************************
 158          * @function        : LCD12864_ClearScreen
 159          * @brief       : under the drawing mode, none one could use 01h to clear the screen
 160          * @param           : none
 161          * @retval          : none
 162          *******************************************************************************/
 163          /*#ifdef LCD12864_PICTURE//drawing mode
 164          
 165          void LCD12864_ClearScreen(void)
 166          {
 167            uchar i,j;
 168          
 169            LCD12864_WriteCmd(0x34);    //open dthe extend instruction
 170          
 171            for(i=0;i<32;i++)       //you need to write 32 times for the reason that there are 32 square plaid
 172            {
 173              LCD12864_WriteCmd(0x80+i);      //coordinate y
 174              LCD12864_WriteCmd(0x80);      //coordinate x
 175          for(j=0;j<32;j++)     //x:16bit you need to write 2byte for once
 176              {             //the address would auto increase 
 177                LCD12864_WriteData(0xFF);   
 178              }
C51 COMPILER V9.56.0.0   LCD12864                                                          12/26/2017 12:46:03 PAGE 4   

 179            }
 180          
 181            LCD12864_WriteCmd(0x36);   //0x36 open the extend instruction
 182            LCD12864_WriteCmd(0x30);   //back to the general instruction
 183          }
 184          
 185          #endif*/
 186          
 187          /*******************************************************************************
 188          * @function        : LCD12864_SetWindow
 189          * @brief       : setting the coordinate
 190          * @param           : x, y
 191          * @retval          : none
 192          *******************************************************************************/
 193          void LCD12864_SetWindow(uchar row, uchar col)
 194          {
 195   1        uchar pos;//the original coodinate
 196   1        
 197   1        switch(row){
 198   2          case 0:
 199   2            row = FIRST_ROW;// first row 80H
 200   2            break;
 201   2          case 1:
 202   2            row = SECOND_ROW; //second row 90H
 203   2            break;
 204   2          case 2:
 205   2            row = THIRD_ROW;//third row 88H
 206   2            break;
 207   2          case 3:
 208   2            row = FOURTH_ROW;//fourth row 98h
 209   2            break;
 210   2          default:
 211   2            break;
 212   2        }
 213   1        
 214   1        pos = row + col;
 215   1        LCD12864_WriteCmd(pos);
 216   1      }
 217          
 218          /*******************************************************************************
 219          * @function        : LCD12864_WriteArray
 220          * @brief       :LCD12864 write an array of unsigned char to show on screen
 221          * @param           : arr -- the unsigned char array that will be show on
 222          * @retval          : none
 223          *******************************************************************************/
 224          void LCD12864_WriteArray(uchar *arr, uchar row, uchar col){
 225   1        uchar i = 0;
 226   1        LCD12864_SetWindow(row, col);
 227   1        while(arr != 0 && *(arr++) != '\0'){
 228   2          LCD12864_WriteData(*(arr - 1));
 229   2          i++;
 230   2          if(i + col >= 16){
 231   3            i = col = 0;
 232   3            LCD12864_SetWindow(++row, 0);
 233   3          }
 234   2        }
 235   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    277    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.56.0.0   LCD12864                                                          12/26/2017 12:46:03 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
